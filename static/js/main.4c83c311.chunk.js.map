{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortType","setSortType","isReversed","setReversed","changedGoods","goods","visibleGoods","sort","good1","good2","LENGTH","length","ALPHABET","localeCompare","NONE","Error","reverse","getReorderedGoods","isGoodsChanged","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAjCD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOD,GAsBzB,OApBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQT,GACN,KAAKJ,EAASc,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAE9B,KAAKf,EAASgB,SACZ,OAAOJ,EAAMK,cAAcJ,GAE7B,KAAKb,EAASkB,KACZ,OAAO,EAET,QACE,MAAM,IAAIC,MAAM,qBAErB,IAEGb,GACFI,EAAaU,UAGRV,CACR,CAMsBW,CACnBpB,EACA,CAAEG,WAAUE,eAERgB,EAAkBlB,IAAaJ,EAASkB,MAASZ,EAEvD,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYrB,IAAaJ,EAASgB,WAGtCU,QAAS,kBAAMrB,EAAYL,EAASgB,SAA3B,EARX,iCAaA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYrB,IAAaJ,EAASc,SAGtCY,QAAS,kBAAMrB,EAAYL,EAASc,OAA3B,EARX,4BAaA,wBACEU,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAanB,IAGjBoB,QAAS,kBAAMnB,GAAaD,EAAnB,EARX,qBAaCgB,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPnB,GAAY,GACZF,EAAYL,EAASkB,KACtB,EANH,sBAaJ,6BACE,6BACGV,EAAamB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,EADJ,UAS/B,ECpIDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.4c83c311.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.NONE:\n        return 0;\n\n      default:\n        throw new Error('Type is not valid');\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(0);\n  const [isReversed, setReversed] = useState(false);\n\n  const changedGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n  const isGoodsChanged = (sortType !== SortType.NONE) || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={() => setReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {isGoodsChanged && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setReversed(false);\n              setSortType(SortType.NONE);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {changedGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}